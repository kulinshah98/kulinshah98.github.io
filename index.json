[{"authors":null,"categories":null,"content":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.main]] menu links to it in the config.toml.\n","date":1536431400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536431400,"objectID":"c3224f3a64174f08aaf31e1f1d16ffd3","permalink":"https://kulinshah98.github.io/tutorial/","publishdate":"2018-09-09T00:00:00+05:30","relpermalink":"/tutorial/","section":"tutorial","summary":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"","date":1461090600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461090600,"objectID":"3c42bb4157bf51d85ae7ffc4e1685909","permalink":"https://kulinshah98.github.io/projects/","publishdate":"2016-04-20T00:00:00+05:30","relpermalink":"/projects/","section":"","summary":"","tags":null,"title":"Selected Projects","type":"page"},{"authors":["**Kulin Shah**","Naresh Manwani"],"categories":null,"content":"","date":1579285800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579285800,"objectID":"88288b6a9d27bc1cb308bb54ab08412f","permalink":"https://kulinshah98.github.io/publication/online-active-learning/","publishdate":"2020-01-18T00:00:00+05:30","relpermalink":"/publication/online-active-learning/","section":"publication","summary":"Active learning is an important technique to reduce the number of labeled examples in supervised learning. Active learning for binary classification has been well addressed in machine learning. However, active learning of the reject option classifier remains unaddressed. In this paper, we propose novel algorithms for active learning of reject option classifiers. We develop an active learning algorithm using double ramp loss function. We provide mistake bounds for this algorithm. We also propose a new loss function called double sigmoid loss function for reject option and corresponding active learning algorithm. We offer a convergence guarantee for this algorithm.We provide extensive experimental results to show the effectiveness of the proposed algorithms. The proposed algorithms efficiently reduce the number of label examples required.","tags":[],"title":"Online active learning of reject option classifiers","type":"publication"},{"authors":["**Kulin Shah**","Naresh Manwani"],"categories":null,"content":"","date":1548700200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548700200,"objectID":"82c54bdf6d09b32ed439044eea173941","permalink":"https://kulinshah98.github.io/publication/reject-option-classification/","publishdate":"2019-01-29T00:00:00+05:30","relpermalink":"/publication/reject-option-classification/","section":"publication","summary":"We propose an approach for learning sparse reject option classifiers using double ramp loss. We use DC programming to find the risk minimizer. The algorithm solves a sequence of linear programs to learn the reject option classifier. We show that the Double Ramp Loss is Fisher consistent. We also show that the excess risk of 0-d-1 loss is upper bounded by excess risk of Double Ramp loss. We derive the generalization error bounds for the proposed approach. We show the effectiveness of the proposed approach by experimenting it on several real world datasets. The proposed approach not only performs comparable to the state of the art, it also successfully learns sparse classifiers.","tags":[],"title":"Sparse Reject Option Classifier using Successive Linear Programming","type":"publication"},{"authors":["Bakhtiyar Syed","Vijayasaradhi Indurthi","**Kulin Shah**","Manish Gupta","Vasudeva Varma"],"categories":null,"content":"","date":1548527400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548527400,"objectID":"7c33557daac23319fb5b689027c8d225","permalink":"https://kulinshah98.github.io/publication/aaai19-workshop/","publishdate":"2019-01-27T00:00:00+05:30","relpermalink":"/publication/aaai19-workshop/","section":"publication","summary":"Modeling affect via understanding the social constructs behind them is an important task in devising robust and accurate systems for socially relevant scenarios. In the CL-Aff Shared Task (part of Affective Content Analysis workshop@ AAAI 2019), the organizers released a dataset of ‘happy’moments, called the HappyDB corpus. The task is to detect two social constructs: the agency (ie, whether the author is in control of the happy moment) and the social characteristics (ie, whether anyone else other than the author was also involved in the happy moment). We employ an inductive transfer learning technique where we utilize a pre-trained language model and fine-tune it on the target task for both the binary classification tasks. At first, we use a language model pre-trained on the huge WikiText-103 corpus. This step utilizes an AWDLSTM with three hidden layers for training the language model. In the second step, we fine-tune the pre-trained language model on both the labeled and unlabeled instances from the HappyDB dataset. Finally, we train a classifier on top of the language model for each of the identification tasks. Our experiments using 10-fold cross validation on the corpus show that we achieve a high accuracy of∼ 93% for detection of the social characteristic and∼ 87% for agency of the author, showing significant gains over other baselines. We also show that using the unlabeled dataset for fine-tuning the language model in the second step improves our accuracy by 1-2% across detection of both the constructs.","tags":[],"title":"Ingredients for happiness: Modeling constructs via semi-supervised content driven inductive transfer learning","type":"publication"},{"authors":["**Kulin Shah**","PS Sastry","Naresh Manwani"],"categories":null,"content":"","date":1546281000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546281000,"objectID":"4c34151b7fcf03adfd955844a2bca50a","permalink":"https://kulinshah98.github.io/publication/polyhedral-learning/","publishdate":"2019-01-01T00:00:00+05:30","relpermalink":"/publication/polyhedral-learning/","section":"publication","summary":"In this paper, we propose a novel mixture of expert architecture for learning polyhedral classifiers. We learn the parameters of the classifier using an expectation maximization algorithm. We derive the generalization bounds of the proposed approach. Through extensive simulation study, we show that the proposed method performs comparably to other state-of-the-art approaches.","tags":[],"title":"PLUME: Polyhedral Learning Using Mixture of Experts","type":"publication"},{"authors":null,"categories":null,"content":" In this tutorial, I'll share my top 10 tips for getting started with Academic:\nTip 1 ...\nTip 2 ...\n","date":1536431400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536431400,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"https://kulinshah98.github.io/tutorial/example/","publishdate":"2018-09-09T00:00:00+05:30","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I'll share my top 10 tips for getting started with Academic:\nTip 1 ...\nTip 2 ...","tags":null,"title":"Example Page","type":"docs"},{"authors":null,"categories":null,"content":" A concurrent process of voting where the threads representing evms, voters and booths run concurrently using conditional variables and mutex locks.\nImplementation Details  Creating thread for each EVM and each voter. Voter thread will call voter function which will wait until he will allocate a EVM to vote. EVM thread will call EVM function. EVM function will generate a random number between 1 to max. capacity of that booth and allocate that many voter to that EVM. Now EVM thread will give signal to voter thread that voter is a given that EVM to vote then after Voting is done , Voter thread will terminate .After all voter of that booth is done then each EVM thread will terminate.  ","date":1488133800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1488133800,"objectID":"7a707f8c74668a331429ea5ce86932e3","permalink":"https://kulinshah98.github.io/project/concurrent-voting-mechanism/","publishdate":"2017-02-27T00:00:00+05:30","relpermalink":"/project/concurrent-voting-mechanism/","section":"project","summary":"Implementation of a concurrent process of voting with concurrent polling booths using threads and mutex locks","tags":["Other"],"title":"Concurrent Voting Mechanism","type":"project"},{"authors":null,"categories":null,"content":" An AI agent implemented using Monte Carlo Tree Search (MCTS) using Upper Confidence Bounds (UCT).\nGame Description  Basic game is - https://mathwithbaddrawings.com/ultimate-tic-tac-toe-original-post/\n But instead of 3*3, it is 4*4  Resources for MCTS and UCT  https://en.wikipedia.org/wiki/Monte_Carlo_tree_search https://jeffbradberry.com/posts/2015/09/intro-to-monte-carlo-tree-search/ http://www.cameronius.com/research/mcts/about/index.html  Test  Tested our agent with several search algorithms and other algorithms Our algorithm outperformed all other algorithms  Scope of improvement  Backpropogation step of MCTS properly to store heuristic Implementation in C++ instead of Python for more number of simulations Evaluation function  ","date":1461695400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461695400,"objectID":"960965c8dcfb73ab78ac1ce52298ae4b","permalink":"https://kulinshah98.github.io/project/ai-bot-for-ultimate-tic-tac-toe/","publishdate":"2016-04-27T00:00:00+05:30","relpermalink":"/project/ai-bot-for-ultimate-tic-tac-toe/","section":"project","summary":"Implementation of an agent for ultimate tic-tac-toe using Monte Carlo Tree Search and Upper Confidential Bound (UCB).","tags":["Machine Learning"],"title":"AI Bot for ultimate tic-tac-toe","type":"project"},{"authors":null,"categories":null,"content":" Pytorch implementation of new reinfrocement learning operators proposed in Increasing the Action Gap: New Operators for Reinforcement Learning . This paper introduces new optimality-preserving operators on Q-functions. This project includes the source code for training, demo and action gap visualization, and trained models with 3 learning operators for 5 Atari games.\nResults  Persistent Advantage Learning operator on 5 games : Phoenix, Pong, Breakout, SpaceInvaders and Asterix Saved model can be downloaded from here  Environment Details  python 3.5 gym pytorch  Implementation Details  src directory,  To train model, set the environment name in main.py. In dqn_learn.py, set the error according to the operator with which you want to train. Set the hyperparameters and run python3 main.py inside src directory. In tmp directory, the results and videos by gym monitor are stored. You can change this directory while wrapping Monitor wrapper on environment. models directory stores the trained models. Saved models can be used to visualize action gap or do a test run. Rewards per episode while training are stored in statistics.pkl.  demo_src directory,  main_traj.py can be used to run one test episode with trained model. It will also store the observed states which can later be used to plot action gap. Set the environment name (game name) in main_traj.py and run it. Make sure that you have trained model with appropriate name in models directory. main_actiongap.py can be used to run normal DQN, AL and PAL for an episode to store the action gap which can be visualized later. First run main_traj.py with appropriate game name to store an episode. Then run main_actiongap.py with the same game name. It will store the actiongap for all 3 operators in a pickle file. actiongap_plot.py can be used to plot saved actiongap.  results directory,  videos contains the videos for 5 Atari games on which we have trained Persistent Advantage Learning (PAL) operator. First video is taken at the start of the training and second video is taken after training. plots includes the plotted results by my training and authors' results.   Report  report.pdf has indepth analysis of the paper and obtained results. It includes the results obtained by authors which aligns with my results. presentation.pdf was used to present the project and results.  Credit This implementation is inspired from https://github.com/berkeleydeeprlcourse/homework/tree/master/hw3\nTODO  Source code has some code duplication which can be removed and restructured.  ","date":1461695400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461695400,"objectID":"b7d7af4679bc42d1c0276863079e47ea","permalink":"https://kulinshah98.github.io/project/consistent-bellman-operator/","publishdate":"2016-04-27T00:00:00+05:30","relpermalink":"/project/consistent-bellman-operator/","section":"project","summary":"Study of inconsistent Bellman operator and implementation of locally consistent bellman operator using DQN.","tags":["Machine Learning"],"title":"Consistent Bellman Operator","type":"project"},{"authors":null,"categories":null,"content":"  Go-Back N protocol is error detection and error correction algorithm in the communtication between sender and receiver through socket.  Implementation Details  Created sender and receiver program which can communicate with each other. Go-Back N protocol will detect and correct error in communication between sender and receiver.  Test  To test Go-Back-N protocol, at the receiver side, I randomly skipped some packets.  ","date":1461695400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461695400,"objectID":"3ef2e537bf6605fcce8c26f2a21e2dbc","permalink":"https://kulinshah98.github.io/project/go-back-n-protocol/","publishdate":"2016-04-27T00:00:00+05:30","relpermalink":"/project/go-back-n-protocol/","section":"project","summary":"Implementation of error detection and error correction in process of file sharing and message passing using Go Back N Protocol.","tags":["Other"],"title":"Go Back N Protocol","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461695400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461695400,"objectID":"874d8c0bf05d5b7a0a9efe0201e441c8","permalink":"https://kulinshah98.github.io/project/pricing-mechanism/","publishdate":"2016-04-27T00:00:00+05:30","relpermalink":"/project/pricing-mechanism/","section":"project","summary":"Study of pricing model where the consumer discovers the value of the product only as the consumer uses it","tags":["Game Theory"],"title":"Pricing mechanism design","type":"project"},{"authors":null,"categories":null,"content":" Python Implementation of Visual Relative Attributes for Image Classification and Zero Shot Learning\nDescription This implementation refers to paper Relative Attributes, D. Parikh and K. Grauman, International Conference on Computer Vision (ICCV), 2011. Original code given by authors was in matlab. This repo contains python code for learning relative ranking function using Newton optimization implemented from scratch. Also Zero Shot Learning with Gaussian Mixture Model is implemented in python.\nImplementation Details  (src/rank_svm.py) - contains the implementation of rank svm using Newton's method. (src/zero_shot_training.py) - training files for zero shot learning respectively. (src/zero_shot_GMM.py) - testing files for zero shot learning respectively. Pre-extracted gist features from 'PubFig' dataset are used in this implementation. To train on new dataset, (gist) module and (src/extract_feature.m) can be used to extract gist features. Learned ranking function, preprocessed data, etc. are read and saved in (demo) directory.  ","date":1461695400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461695400,"objectID":"b9012e6473609287e9b6858ce4588b7e","permalink":"https://kulinshah98.github.io/project/relative-attributes/","publishdate":"2016-04-27T00:00:00+05:30","relpermalink":"/project/relative-attributes/","section":"project","summary":"Implementation of an algorithm to learn relative visual attribute strength of images and image description in reference to an example image.","tags":["Computer Vision"],"title":"Relative Attributes","type":"project"},{"authors":null,"categories":null,"content":"","date":1461695400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461695400,"objectID":"dcf80c5d94b7d896f48e89b85672d525","permalink":"https://kulinshah98.github.io/project/universal-style-transfer/","publishdate":"2016-04-27T00:00:00+05:30","relpermalink":"/project/universal-style-transfer/","section":"project","summary":"Implementation of universal style transfer via feature transforms using Coloring Transform, Whitening Transform and decoder.","tags":["Computer Vision"],"title":"Universal Style Transfer","type":"project"},{"authors":[],"categories":null,"content":" Academic makes it easy to create a beautiful website for free using Markdown. Customize anything on your site with widgets, themes, and language packs.\nFollow our easy step by step guide to learn how to build your own free website with Academic. Check out the personal demo or the business demo of what you'll get in less than 10 minutes.\n View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an Academic sticker Wear the T-shirt   \nKey features:\n Easily manage various content including homepage, blog posts, publications, talks, and projects Extensible via color themes and widgets/plugins Write in Markdown for easy formatting and code highlighting, with LaTeX for mathematical expressions Social/academic network linking, Google Analytics, and Disqus comments Responsive and mobile friendly Simple and refreshing one page design Multilingual and easy to customize  Color Themes Academic is available in different color themes and font themes.\n         Ecosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Quick install using your web browser  Install Academic with Netlify  Netlify will provide you with a customizable URL to access your new site  On GitHub, go to your newly created academic-kickstart repository and edit config.toml to personalize your site. Shortly after saving the file, your site will automatically update Read the Quick Start Guide to learn how to add Markdown content. For inspiration, refer to the Markdown content which powers the Demo  Install with Git Prerequisites:\n Download and install Git Download and install Hugo   Fork the Academic Kickstart repository and clone your fork with Git:\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website  Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace sourcethemes with your GitHub username.\n Initialize the theme:\ncd My_Website git submodule update --init --recursive   Install with ZIP  Download and extract Academic Kickstart Download and extract the Academic theme to the themes/academic/ folder from the above step  Install with RStudio View the guide to installing Academic with RStudio\nQuick start  If you installed on your computer, view your new website by running the following command:\nhugo server  Now visit localhost:1313 and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.\n Read the Quick Start Guide to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the Markdown content which powers the Demo\n Build your site by running the hugo command. Then host it for free using Github Pages or Netlify (refer to the first installation method). Alternatively, copy the generated public/ directory (by FTP, Rsync, etc.) to your production web server (such as a university's hosting service).\n  Updating Feel free to star the project on Github to help keep track of updates and check out the release notes prior to updating your site.\nBefore updating the framework, it is recommended to make a backup of your entire website directory (or at least your themes/academic directory) and record your current version number.\nBy default, Academic is installed as a Git submodule which can be updated by running the following command:\ngit submodule update --remote --merge  Check out the update guide for full instructions and alternative methods.\nFeedback \u0026amp; Contributing Please use the issue tracker to let me know about any bugs or feature requests, or alternatively make a pull request.\nFor support, head over to the Hugo discussion forum.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461090600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515781800,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://kulinshah98.github.io/post/getting-started/","publishdate":"2016-04-20T00:00:00+05:30","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website or blog in under 10 minutes.","tags":["Academic"],"title":"Sub-reviewer, ACM IKDD CoDS-COMAD, 2018","type":"post"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let's make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"https://kulinshah98.github.io/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]