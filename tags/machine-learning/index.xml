<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine Learning on Kulin Shah</title>
    <link>https://kulinshah98.github.io/tags/machine-learning/</link>
    <description>Recent content in Machine Learning on Kulin Shah</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Wed, 27 Apr 2016 00:00:00 +0530</lastBuildDate>
    
	<atom:link href="https://kulinshah98.github.io/tags/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AI Bot for ultimate tic-tac-toe</title>
      <link>https://kulinshah98.github.io/project/ai-bot-for-ultimate-tic-tac-toe/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0530</pubDate>
      
      <guid>https://kulinshah98.github.io/project/ai-bot-for-ultimate-tic-tac-toe/</guid>
      <description> An AI agent implemented using Monte Carlo Tree Search (MCTS) using Upper Confidence Bounds (UCT).
Game Description  Basic game is - https://mathwithbaddrawings.com/ultimate-tic-tac-toe-original-post/
 But instead of 3*3, it is 4*4  Resources for MCTS and UCT  https://en.wikipedia.org/wiki/Monte_Carlo_tree_search https://jeffbradberry.com/posts/2015/09/intro-to-monte-carlo-tree-search/ http://www.cameronius.com/research/mcts/about/index.html  Test  Tested our agent with several search algorithms and other algorithms Our algorithm outperformed all other algorithms  Scope of improvement  Backpropogation step of MCTS properly to store heuristic Implementation in C++ instead of Python for more number of simulations Evaluation function  </description>
    </item>
    
    <item>
      <title>Consistent Bellman Operator</title>
      <link>https://kulinshah98.github.io/project/consistent-bellman-operator/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0530</pubDate>
      
      <guid>https://kulinshah98.github.io/project/consistent-bellman-operator/</guid>
      <description>Pytorch implementation of new reinfrocement learning operators proposed in Increasing the Action Gap: New Operators for Reinforcement Learning . This paper introduces new optimality-preserving operators on Q-functions. This project includes the source code for training, demo and action gap visualization, and trained models with 3 learning operators for 5 Atari games.
Results  Persistent Advantage Learning operator on 5 games : Phoenix, Pong, Breakout, SpaceInvaders and Asterix Saved model can be downloaded from here  Environment Details  python 3.</description>
    </item>
    
    <item>
      <title>Universal Style Transfer</title>
      <link>https://kulinshah98.github.io/project/internal-project-copy/second/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0530</pubDate>
      
      <guid>https://kulinshah98.github.io/project/internal-project-copy/second/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.</description>
    </item>
    
    <item>
      <title>Universal Style Transfer</title>
      <link>https://kulinshah98.github.io/project/internal-project/second/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0530</pubDate>
      
      <guid>https://kulinshah98.github.io/project/internal-project/second/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.</description>
    </item>
    
    <item>
      <title>Universal Style Transfer</title>
      <link>https://kulinshah98.github.io/project/universal_style_transfer/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0530</pubDate>
      
      <guid>https://kulinshah98.github.io/project/universal_style_transfer/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.</description>
    </item>
    
  </channel>
</rss>